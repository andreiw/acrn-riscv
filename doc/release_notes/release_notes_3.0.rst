.. _release_notes_3.0:

ACRN v3.0 (DRAFT)
#################

We are pleased to announce the release of the Project ACRN hypervisor
version 3.0.

ACRN is a flexible, lightweight reference hypervisor that is built with
real-time and safety-criticality in mind. It is optimized to streamline
embedded development through an open-source platform. See the
:ref:`introduction` introduction for more information.

All project ACRN source code is maintained in the
https://github.com/projectacrn/acrn-hypervisor repository and includes
folders for the ACRN hypervisor, the ACRN device model, tools, and
documentation. You can download this source code either as a zip or
tar.gz file (see the `ACRN v3.0 GitHub release page
<https://github.com/projectacrn/acrn-hypervisor/releases/tag/v3.0>`_) or
use Git ``clone`` and ``checkout`` commands::

   git clone https://github.com/projectacrn/acrn-hypervisor
   cd acrn-hypervisor
   git checkout v3.0

The project's online technical documentation is also tagged to
correspond with a specific release: generated v3.0 documents can be
found at https://projectacrn.github.io/3.0/.  Documentation for the
latest development branch is found at https://projectacrn.github.io/latest/.

ACRN v3.0 requires Ubuntu 20.04.  Follow the instructions in the
:ref:`gsg` to get started with ACRN.


What's New in v3.0
******************

Redesigned ACRN Configurator
  Brand new UI, including reduced and simplified parameters, provides intuitive
  flow to help users configure.
  hypervisor and VM capabilities and settings.
Intel® TCC Tools Cache Configurator support
  RTVM can reserve a portion of cache (L2 or L3) as software SRAM regions on
  Tiger Lake platform to achieve extreme low latency. For more about Intel TCC tools,
  check out https://www.intel.com/content/www/us/en/develop/documentation/tcc-tools-2022-1-developer-guide/top/real-time-configuration-and-optimization-tools/cache-allocation/cache-configurator.html
Commercial off-the-shelf Tiger Lake machine support
  11th Generation Intel® Core™ Processor (codenamed Tiger Lake) has been supported
  by ACRN hypervisor since v2.3 release. Now a commercially off-the-shelf complete
  system is validated and supported.
Refined shutdown & reset sequence
  User can shutdown or reset the system gracefully from the Windows User VM.
  This is achieved by lifecycle managers in each VM which talks to each other
  via the virtual UART channel.
Hypervisor Real Time Clock (RTC)
  Each VM now has its own PC/AT-compatible RTC/CMOS device emulated by the hypervisor.
  In this way, a sudden jump in VM’s system clock can be avoided which may confuse
  certain applications.

Upgrading to v3.0 From Previous Releases
****************************************

We highly recommended that you follow these instructions to
upgrade to v3.0 from previous ACRN releases.

Generate New Board XML
======================

Board XML files, generated by ACRN board inspector, contain board information
that is essential to build ACRN. Compared to previous versions, ACRN v3.0 adds
the following information to board XMLs to support new features and fixes.

  - Add ``--add-llc-cat`` :ref:`board_inspector_cl` to Board Inspector Tool, reference
    PR `#7331 <https://github.com/projectacrn/acrn-hypervisor/pull/7331>`_.
  - Collect all information about SR-IOV devices, reference PR `#7302 <https://github.com/projectacrn/acrn-hypervisor/pull/7302>`_.
  - Extract all serial ttys and virtio input devices, reference PR `#7219 <https://github.com/projectacrn/acrn-hypervisor/pull/7219>`_.
  - Extract common ioapic information such as ioapic id, address, gsi base and gsi num,
    reference PR `#6987 <https://github.com/projectacrn/acrn-hypervisor/pull/6987>`_.
  - Add another level of `die` node even though the hardware reports die topology in CPUID,
    reference PR `#7080 <https://github.com/projectacrn/acrn-hypervisor/pull/7080>`_.
  - Bringing up all cores online so tool can run cpuid to extract all available cores
    information, reference PR `#7120 <https://github.com/projectacrn/acrn-hypervisor/pull/7120>`_.
  - Add CPU capability and BIOS invalid setting checks, reference PR `#7216 <https://github.com/projectacrn/acrn-hypervisor/pull/7216>`_.
  - Summary board inspector log based on the different log levels, reference PR
    `#7429 <https://github.com/projectacrn/acrn-hypervisor/pull/7429>`_.

The new board XML can be generated using the ACRN board inspector in the same
way as ACRN v2.7. Refer to :ref:`board_inspector_tool` for a complete list of
steps to deploy and run the tool.

Update Configuration Options
============================

In v3.0, data in a launch XML are merged into the scenario XML for the new configurator.
The highly recommended way to use upgrader tool to upgrade a pair of scenario XML and
launch XML files into a merged file, introduced in https://projectacrn.github.io/latest/tutorials/upgrading_configuration.html.
Then use the ACRN Configurator to open the upgraded file for further edits in case
any meaningful data is lost. In detail, the following elements
are refined in the scenario XML file for user-friendly experience.

- ``RDT``
- ``vUART``
- ``IVSHMEM``
- ``Memory``
- ``virtio devices``

The following elements are added to scenario XML files.

- ``vm.lapic_passthrough``
- ``vm.io_completion_polling``
- ``vm.nested_virtualization_support``
- ``vm.virtual_cat_support``
- ``vm.secure_world_support``
- ``vm.hide_mtrr_support``
- ``vm.security_vm``

The following elements were removed.

- ``hv.FEATURES.NVMX_ENABLED``
- ``hv.DEBUG_OPTIONS.LOG_BUF_SIZE``
- ``hv.MEMORY.PLATFORM_RAM_SIZE``
- ``hv.MEMORY.LOW_RAM_SIZE``
- ``hv.CAPACITIES.MAX_IR_ENTRIES``
- ``hv.CAPACITIES.IOMMU_BUS_NUM``
- ``vm.guest_flags``
- ``vm.board_private``

In v3.0, we refine the structure of the generated scripts so that PCI functions
are identified only by their BDF. This change serves as a mandatory step to align
the way how passthrough devices are configured for pre-launched and post-launched VMs,
which eventually allows us to present a unified view in the the ACRN Configurator for
assigning passthrough device. Then we remove some obsolete dynamic parameters and update the
usage of the `--cpu_affinity` parameter in launch script generation logic to use the lapic ID
instead of pCPU ID. (see the `Device Model parameters
<https://projectacrn.github.io/latest/user-guides/acrn-dm-parameters.html>`_)

Document Updates
****************

We've also made edits throughout the documentation to improve clarity,
formatting, and presentation.


Fixed Issues Details
********************

.. comment example item
   - :acrn-issue:`5626` - [CFL][industry] Host Call Trace once detected


Known Issues
************

- :acrn-issue:`6631` - [KATA] Kata support is broken since v2.7
- :acrn-issue:`6978` - [TGL] openstack failed since ACRN v2.7
- :acrn-issue:`7827` - [Configurator]Pre_launched standard VMs cannot share CPU with Service VM
- :acrn-issue:`7831` - [Configurator] Need to save twice to generate vUART and IVSHMEM addresses
